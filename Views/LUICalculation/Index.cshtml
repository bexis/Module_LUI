@model  BExIS.Modules.Lui.UI.Models.LUIQueryModel
@using BExIS.Modules.Lui.UI.Models
@section scripts {
    <link href="@Url.Content("~/Areas/LUI/Content/main.css")" rel="stylesheet" type="text/css" />
}

<table>
    <tr>
        @using (Ajax.BeginForm(
                    "CalculateLUI",
                    "CalculateLUI",
                    new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divResultGrid", OnBegin = "$('#divResultButtons').hide(); $('#divResultGrid').empty(); $('#dtmLuiSpinner').show(); $('html, body').animate({ scrollTop: 0 }, 'slow');", OnSuccess = "$('#divResultButtons').show(); $('#dtmLuiSpinner').hide();resetAllTelerikIconTitles();" },
                    new { @autocomplete = "off" })
               )
        {
            @Html.HiddenFor(m => m.IsPublicAccess)

            <td style="width: 600px; vertical-align:top;">

                @Html.ActionLink("How to reference", "DownloadPDF", new { fileName = "LUI-citation.pdf" }, new { @class = "bx-button small function", target = "_blank" })
                @Html.ActionLink("How to use the tool", "DownloadPDF", new { fileName = "HowToPlusDiagram.pdf" }, new { @class = "bx-button small function", target = "_blank" })
                @Html.ActionLink("LUI changes docu", "DownloadPDF", new { fileName = "LuiChangesInfo.pdf" }, new { @class = "bx-button small function", target = "_blank" })
                @if (Model.MissingComponentData.Count() != 0 && Model.IsPublicAccess == false)
                {
                    <div class="dtm-divBox">
                        <p class="dtm-para-warning"><b>Warning:</b> Some input data needed for the calculation is not fully available. Below you will find the affected years and for which plots the data is missing. For these years, use the LUI for testing purposes only. Only use LUI for publishing if no warning is given.</p>

                        <div class="dtm-controls">

                            @if (Model.MissingComponentData.Count() == 0)
                            {
                                <div>No warnings.</div>
                            }
                            else
                            {
                                <div class="box">
                                    <b>Source Dataset:</b> @Model.DefaultComponentsSetDatasetId<br />
                                </div>
                                <div class="box">
                                    <b>Version:</b> @Model.DefaultComponentsSetDatasetVersion
                                </div>
                                <div class="box">
                                    <b>Last update:</b> @Model.DefaultComponentsSetLastUpdate
                                </div>
                                <br /><br />
                                foreach (var missingCompData in Model.MissingComponentData)
                                {

                                    <div class="box">
                                        <b>Year:</b> @missingCompData.Year<br />
                                    </div>
                                    <div class="box">
                                        <b>Plot coverage:</b><br />
                                        @foreach(var percentage in missingCompData.ExploPercentage)
                                        {
                                            <div>@percentage.Key : @percentage.Value</div>
                                        }

                                    </div>
                                    <div class="box">
                                        <b>Missing plots:</b><br /><a class="plotClick">Click to show</a><br />
                                        <div class="plots">
                                            @foreach (var plot in missingCompData.PlotIds)
                                            {
                                                @plot<br />
                                            }
                                        </div>
                                    </div>
                                    

                                }
                            }

                        </div>

                        <br />
                    </div>
                }
                <div id="divQuery00" class="dtm-divBox">
                    <p class="dtm-para_green">Which input data do you want to use for the calculation. See "LUI changes docu" above for more information.</p>
                    <div class="dtm-controls">
                        @foreach (var item in Model.ComponentsSet.Values)
                        {
                            <span>
                                <label>
                                    @Html.RadioButtonFor(m => m.ComponentsSet.SelectedValue, item)
                                    @item
                                </label>
                            </span>
                        }
                    </div>
                </div>

                <div id="divQuery0" class="dtm-divBox"
                     data-datasetidTill2019="@Settings.get("lui:datasetTill2019ComponentsSet")" 
                     data-datasetidTill2023="@Settings.get("lui:datasetTill2023ComponentsSet")" 
                     data-datasetidDefault="@Settings.get("lui:datasetDefaultComponentsSet")" 
                     data-isPublic="@Model.IsPublicAccess"
                     data-showdataurl="@Url.Action("ShowPrimaryData", "LUICalculation", new { Area = "LUI" })">
                    <p class="dtm-para_green">Please select if you want to extract the raw data (unstandardized) OR if you want to calculate the LUI (standardized).</p>
                    <div class="dtm-controls">
                        @foreach (var item in Model.RawVsCalc.Values)
                        {
                            <span>
                                <label>
                                    @Html.RadioButtonFor(m => m.RawVsCalc.SelectedValue, item)
                                    @item
                                </label>
                            </span>
                        }
                    </div>
                </div>

                <div id="divQuery1" style="display:none" class="dtm-divBox">
                    <p class="dtm-para_green">Please select if you want to calculate a regional OR a global LUI.</p>
                    <div class="dtm-controls">
                        @foreach (var item in Model.Scales.Values)
                        {
                            <span>
                                <label>
                                    @Html.RadioButtonFor(m => m.Scales.SelectedValue, item)
                                    @item
                                </label>
                            </span>
                        }
                    </div>
                </div>

                <div id="divQuery2" style="display:none" class="dtm-divBox">
                    <p id="txt_explos" class="dtm-para_green">
                        <span data-scale="global">Please select two or all Exploratories. Calculation will use an overall average of the choosen Exploratories.</span>
                        <span data-scale="regional">Please select one or more Exploratory(ies). Calculation will use an Exploratory-wise average.</span>
                    </p>
                    <button type="button" data-selectall-target="#divQuery2_1" class="dtm-selectall bx-button smaller function">
                        <span class="dtm-selectall">Select all</span>
                        <span>Deselect all</span>
                    </button>
                    <span class="dtm-error" id="errExploReg">Please select at least one Exploratory.</span>
                    <span class="dtm-error" id="errExploGlob">Global: Please select at least two Exploratories.</span>
                    <br />

                    <div id="divQuery2_1" class="dtm-controls">
                        @for (int i = 0; i < Model.Explos.Count(); i++)
                        {
                            <span>
                                <label>
                                    @Html.CheckBoxFor(m => m.Explos[i].Checked, new { @class = "cb_explos", @data_location = Model.Explos[i].Name })
                                    @Html.DisplayFor(m => m.Explos[i].Name)
                                    @Html.HiddenFor(m => m.Explos[i].Name)
                                </label>
                            </span>
                        }
                    </div>

                    <p class="dtm-para_green">Please select one or more years you want to calculate the LUI for. Old set has only years up to 2016.</p>
                    <button type="button" data-selectall-target="#divQuery2_2" class="dtm-selectall bx-button smaller function">
                        <span class="dtm-selectall">Select all</span>
                        <span>Deselect all</span>
                    </button>

                    <span class="dtm-error" id="errYears">Please select at least one year.</span>
                    <br />

                    <div id="divQuery2_2" class="dtm-controls">
                        <div id="yearstill2019">

                            @for (int i = 0; i < Model.AvailableYearsDataTill2019.Count(); i++)
                            {
                                <span style=" padding-left: 20px; padding-right: 20px;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.AvailableYearsDataTill2019[i].Checked, new { @class = "cb_years" })
                                        @Html.DisplayFor(m => m.AvailableYearsDataTill2019[i].Name)
                                        @Html.HiddenFor(m => m.AvailableYearsDataTill2019[i].Name)
                                    </label>
                                </span>
                            }
                        </div>
                        <div id="yearstill2023">

                            @for (int i = 0; i < Model.AvailableYearsDataTill2023.Count(); i++)
                            {
                                <span style=" padding-left: 20px; padding-right: 20px;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.AvailableYearsDataTill2023[i].Checked, new { @class = "cb_years" })
                                        @Html.DisplayFor(m => m.AvailableYearsDataTill2023[i].Name)
                                        @Html.HiddenFor(m => m.AvailableYearsDataTill2023[i].Name)
                                    </label>
                                </span>
                            }
                        </div>
                        <div id="yearsDefault">
                            @for (int i = 0; i < Model.AvailableYearsDataDefault.Count(); i++)
                            {
                                <span style="padding-right: 20px;">
                                    <label>
                                        @Html.CheckBoxFor(m => m.AvailableYearsDataDefault[i].Checked, new { @class = "cb_years" })
                                        @Html.DisplayFor(m => m.AvailableYearsDataDefault[i].Name)
                                        @Html.HiddenFor(m => m.AvailableYearsDataDefault[i].Name)
                                    </label>
                                </span>
                            }
                        </div>
                    </div>

                    <div class="dtm-message dtm-para_green" id="dtmLocationMessages"><div data-location="ALB">@Settings.get("lui:msg:alb")</div><div data-location="HAI">@Settings.get("lui:msg:hai")</div><div data-location="SCH">@Settings.get("lui:msg:sch")</div></div>

                    <button id="btnConfirmSelection" type="button" name="Confirm selection" class="bx-button small function">Confirm selection</button>
                    <button id="btnEditSelection" type="button" name="Edit selection" class="bx-button small function bx-disabled" disabled="disabled">Edit selection</button>
                </div>

                <div id="divQuery3" style="display:none" class="dtm-divBox">
                    <p class="dtm-para_green">Please select if you want to calculate a LUI for every selected year separately OR one LUI over all selected years.</p>
                    <div class="dtm-controls">
                        @foreach (var item in Model.TypeOfMean.Values)
                        {
                            <span>
                                <label>
                                    @Html.RadioButtonFor(m => m.TypeOfMean.SelectedValue, item)
                                    @item
                                </label>
                            </span>
                        }
                    </div>
                </div>

                <div id="divQuery4" style="display:none" class="dtm-divBox">
                    <p class="dtm-para_green">Please select for which Plots the LUI will be calculated. Please be aware that standardization is always done over all EPs, not just the selected ones. </p>
                    <div class="dtm-controls">
                        @foreach (var item in Model.Plotlevel.Values)
                        {
                            <span>
                                <label>
                                    @Html.RadioButtonFor(m => m.Plotlevel.SelectedValue, item)
                                    @item
                                </label>
                            </span>
                        }
                    </div>
                </div>
                <button id="btnCalculateLUI" name="Calculate LUI" type="submit" class="bx-button action" style="display:none">Calculate LUI</button>
            </td>
        }

        <td style="vertical-align:top;">
            <div id="divResultButtons" style="display:none"
                 data-prepurl="@Url.Action("PrepareDownloadFile", "LUICalculation")"
                 data-downloadurl="@Url.Action("DownloadFile", "LUICalculation")"
                 data-isPublic="@Model.IsPublicAccess">
                <button type="button" class="dtm-download bx-button function" data-download="text/csv">Download (zip)</button>
                <div id="downloadLuiSpinner" style=""><span class="fa fa-spinner fa-pulse" ></span> Fetching Data</div>
                @*<button type="button" class="dtm-download bx-button function" data-download="text/tsv">Download Tab Separated</button>*@
            </div>
            <br />
            <div id="divResultGrid"></div>
            <h3 class="bx-rpm-loading" id="dtmLuiSpinner" style="display: none; text-align: center;"><span class="fa fa-spinner fa-pulse"></span> Fetching Data</h3>
        </td>
    </tr>
</table>

<script type="text/javascript" src="/Areas/LUI/Scripts/lui.js">


</script>
<script>

    /* waring list */
    $(document).ready(function () {

        $('.plots').hide();
        $('#downloadLuiSpinner').hide();

        $('.plotClick').click(function () {
            $('.plots').slideToggle();
        });

    });


</script>